name: CI

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:  # ‚Üê GitHub‰∏ä„Åã„ÇâÊâãÂãïÂÆüË°å„ÇíÂèØËÉΩ„Å´„Åô„Çã

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager || true

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config google-chrome-stable net-tools

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Wait for PostgreSQL hostname to resolve
        run: |
          echo "üîÅ Waiting for hostname 'db' to resolve..."
          for i in {1..15}; do
            getent hosts db && echo "‚úÖ Hostname resolved!" && exit 0
            echo "‚è≥ Still resolving..."
            sleep 2
          done
          echo "‚ùå Hostname 'db' could not be resolved."
          exit 1

      - name: Wait for PostgreSQL to be ready
        run: |
          echo "üîÅ Waiting for PostgreSQL service to be ready..."
          for i in {1..15}; do
            pg_isready -h db -p 5432 && echo "‚úÖ PostgreSQL is ready!" && exit 0
            echo "‚è≥ Still waiting for service..."
            sleep 2
          done
          echo "‚ùå PostgreSQL service not ready."
          exit 1

      - name: Set up database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@db:5432/app_test
        run: bundle exec rails db:create db:schema:load

      - name: Run RSpec tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@db:5432/app_test
        run: bundle exec rspec

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Deploy via Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
