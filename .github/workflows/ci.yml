name: Rails CI with Postgres

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DISABLE_SPRING: 1       # ★ Springを完全無効化（これでエラー消えます）

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Install tools for connectivity checks
        run: |
          sudo apt-get update
          sudo apt-get install -y netcat-openbsd dnsutils

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..20}; do
            nc -z 127.0.0.1 5432 && echo "🎉 Postgres is up!" && exit 0
            echo "Waiting for Postgres... ($i)"
            sleep 2
          done
          echo "❌ Postgres never came up" && exit 1

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      # --- Jest 用 (既存を壊さず追加してある想定) ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install JS deps
        run: yarn install --frozen-lockfile
      # ---------------------------------------------

      - name: Show current database.yml
        run: cat config/database.yml

      - name: Prepare database
        run: |
          # どちらでもOK：下のどちらか1行で十分
          bundle exec rails db:prepare
          # もし上で不安なら従来通りでも可：
          # bundle exec rails db:create db:schema:load

      - name: Run Jest tests
        env:
          CI: true
        run: yarn test

      - name: Run RSpec tests
        run: bundle exec rspec --format documentation
