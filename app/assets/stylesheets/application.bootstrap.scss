// すべての @use はファイルの本当の先頭に！コメントもOK
@use "bootstrap/scss/bootstrap";
@use "bootstrap-icons/font/bootstrap-icons";
@use "components/floating_button";
@use "components/neon_buttons" as *;
@use "custom_styles";
@use "index_logs";
@use "modal_styles";
@use "mobile_apps";
@use "application_index";
@use "new_html";
@use "playlist_music";
@use "show_html";
@use "profile_styles";
@use "nokori_styles";
@use "swal_flash_craft";
@use "music_player";

// 🔴 外部テーマCSS（Bootswatch等）は読み込まない（競合防止）
// @import url("...bootswatch...");  ← 使わない

.view-hidden {
  display: none !important;
  opacity: 0 !important;
  visibility: hidden !important;
  height: 0 !important;
  pointer-events: none !important;
}

/* 補助クラス */
.mobile-only { display: none !important; }
.desktop-only { display: block !important; }

@media (max-width: 996px) {
  .desktop-only { display: none !important; }
  .mobile-only  { display: block !important; }
}

/* モーダル時もフッタープレーヤーは前面維持（従来どおり） */
body.modal-open #bottom-player { z-index: 20000 !important; }

/* showページのプレーヤー高さ（従来どおり） */
body.playlist-show-page .bottom-player {
  position: fixed !important;
  bottom: 50px !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 2000 !important;
}

@media (max-width: 996px) {
  html body .bottom-player {
    position: fixed !important;
    bottom: 80px !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 2000 !important;
  }
}

/* ===== モバイル：プレイリスト“一覧”モーダル内は必ずタップ可 ===== */
#playlist-modal-mobile {
  #super-search-panel { pointer-events: auto !important; }
  #playlist-sidebar-home,
  .filter-box,
  a, button, .playlist-link { pointer-events: auto !important; }
}

/* モーダル中はフッターがタップを奪わない */
.modal-open .mobile-footer { pointer-events: none; }

/* ローディングカバーを隠している時はタップ阻害なし */
#loading-overlay.view-hidden { pointer-events: none !important; }

/* プレーヤー非表示フラグ */
.no-player #bottom-player,
.no-player #hidden-sc-player { display: none !important; }

/* フッタープレーヤー高さの余白 */
:root { --footer-player-h: 84px; }
.emotion-log-show { padding-bottom: calc(var(--footer-player-h) + env(safe-area-inset-bottom, 0px)); }
body.no-player .emotion-log-show { padding-bottom: 0 !important; }

/* モバイル詳細：ページネーション調整 */
.emotion-log-show .pagination {
  position: static !important;
  inset: auto !important;
  float: none !important;
  display: flex;
  flex-wrap: wrap !important;
  justify-content: center !important;
  white-space: normal !important;
  gap: .25rem;
}

/* =========================================================
   ▼▼ ここが今回の修正ポイント ▼▼
   「view-switcher コンテナが存在するページ限定」で
   デスクトップ/モバイルの強制切替を適用する。
   （＝他ページでは一切隠さない → フッターだけ現象を防止）
   ========================================================= */

/* デフォルトでは何もしない（グローバルには隠さない） */
/* #desktop-view, #mobile-view へのグローバル指定は置かない */

/* view-switcher が付与されたページだけ切替 */
[data-controller~="view-switcher"] #desktop-view { display: block; }
[data-controller~="view-switcher"] #mobile-view  { display: none; }

@media (max-width: 996px) {
  [data-controller~="view-switcher"] #desktop-view { display: none !important; }
  [data-controller~="view-switcher"] #mobile-view  { display: block !important; }

  /* ▼ モバイル時、モバイル側の .view-hidden を解除（view-switcher配下のみ） */
  [data-controller~="view-switcher"] #mobile-view.view-hidden {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    height: auto !important;
    pointer-events: auto !important;
  }
  [data-controller~="view-switcher"] #desktop-view.view-hidden {
    display: none !important;
  }

  /* 補助（既存 .mobile-only / .desktop-only と整合） */
  .desktop-only { display: none !important; }
  .mobile-only  { display: block !important; }

  /* 残留しやすいカバー要素の緊急無効化は“最低限” */
  #loading-overlay,
  .modal-backdrop {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
    pointer-events: none !important;
  }
}

/* ▼ preloadで真っ黒にならない保険 */
html.preload body { visibility: visible !important; }

/* ==== ここより下は、あなたの既存スタイル（ページ固有など） ==== */

/* ドロップダウン等（あなたの既存CSSがあればそのまま） */
.user-dropdown:hover .dropdown-menu { display: block; }

/* ページネーションの装飾（既存） */
.pagination>li>a { border: none; color: #696969; }
.pagination>.active>a { background: #93c9ff; border-radius: 15px; }
.pagination>li>a:hover { border-radius: 15px; }

/* アバター編集（既存） */
.rounded-circle { border-radius: 50%; border: 2px solid #e600ff; box-shadow: 0 0 8px rgba(230,0,255,.6); }
#cropContainer { position: relative; width: 80px; height: 80px; overflow: hidden; border: 2px solid #ccc; }
#cropImage { position: absolute; top: 0; left: 0; user-select: none; -webkit-user-select: none; max-width: none; max-height: none; cursor: grab; }
#avatarPreviewInline { width: 80px; height: 80px; border-radius: 50%; object-fit: cover; }

/* モバイルスーパーサーチ（既存） */
.mobile-super-search-modal-content { background: #141824; color: #fff; border-radius: 18px; box-shadow: 0 4px 20px #0006; }
.mobile-form-label { font-size: 1.06em; font-weight: 600; margin-bottom: .5em; color: #c6f6fa; }
.mobile-form-select, .mobile-form-control {
  border-radius: 8px; background: #202d36; color: #fff; border: 1px solid #364b6b;
  padding: .55em .9em; font-size: 1em;
}
.mobile-form-autocomplete { position: relative; }
.mobile-tag-suggestions {
  position: absolute; top: 100%; left: 0; width: 100%; z-index: 9999; margin: 0;
  border-radius: 0 0 12px 12px; background: #232b3a; border: 1px solid #2b3d4d;
  box-shadow: 0 2px 16px #0014; max-height: 180px; overflow-y: auto;
}
.mobile-super-search-btn:hover { transform: scale(1.04); box-shadow: 0 0 24px #ae5cff80; }
.mobile-reset-btn { min-width: 92px; }

@media (max-width: 520px) {
  .mobile-super-search-modal-content { border-radius: 0; box-shadow: none; }
}


/* =========================================================
  ▼▼ モバイル背景の安定化（iOS Safari対策込み）9/3寝る前に行った ▼▼
  - 背景を body に設定している場合でも縮み/タイル化を防ぐ
  - view-switcher 配下のみ副作用を最小化
   ========================================================= */
@media (max-width: 996px) {
  /* ビューポートの高さ基準を安定させる */
  html, body {
    height: auto !important;
    min-height: 100% !important;
  }

  /* モバイル側のラッパを確実に全高化＆横はみ出し防止 */
  [data-controller~="view-switcher"] #mobile-view {
    position: relative;
    min-height: 100vh;   /* 旧端末向け */
    min-height: 100dvh;  /* iOS 16+／Android Chrome */
    overflow-x: hidden;
    background: transparent !important; /* ラッパに余計な背景があれば無効化 */
  }

  /* 背景が body にある想定の“汎用”安定化（画像パスは触らない） */
  body {
    background-attachment: scroll !important;  /* iOSの fixed バグ回避 */
    background-size: cover !important;         /* 全面カバーで縮み防止 */
    background-position: center center !important;
    background-repeat: no-repeat !important;   /* タイル化防止 */
  }

  /* もし container 側に背景が設定されていた場合は打ち消してラッパで見せる */
  [data-controller~="view-switcher"] #mobile-view .container,
  [data-controller~="view-switcher"] #mobile-view .mobile-content {
    background: transparent !important;
    background-image: none !important;
  }

  /* Safari の描画安定の小手先（副作用なし） */
  [data-controller~="view-switcher"] #mobile-view {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    transform: translateZ(0);
  }
}

/* モバイル全面背景を #mobile-view の擬似要素で表示（fixedバグ回避） */
@media (max-width: 996px) {
  [data-controller~="view-switcher"] #mobile-view::before {
    content: "";
    position: fixed;
    inset: 0;
    z-index: -1;
    /* ここに“今使ってる背景画像”を指定（例：bodyの background-image と同じもの） */
    background-image: inherit;          /* body と同じ指定を継承できるならこれでOK */
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    transform: translateZ(0);
  }
}

/* ===== モバイルスクロール安定化 追加（9/3）— ここから ===== */

/* 1) 上端オーバースクロールの連鎖を止める（Pull-to-Refresh抑止） */
html, body {
  overscroll-behavior-y: none;
}

/* 2) view-switcher配下のモバイルラッパは高さ固定＋親はスクロールさせない */
[data-controller~="view-switcher"] #mobile-view {
  height: 100dvh;
  overflow: hidden;
}

/* 旧端末フォールバック */
@supports not (height: 100dvh) {
  [data-controller~="view-switcher"] #mobile-view { height: 100vh; }
}

/* 3) フッターと上部ヘッダ分を変数化（値は実UIに合わせて調整） */
:root {
  --mobile-footer-h: 64px;    /* ← フッターの実高さに合わせる（例: 56〜80px） */
  --mobile-headroom: 140px;   /* ← ロゴ/タイトル/ユーザーバー等の上部余白合計 */
}

/* 4) Turbo Frameだけを縦スクロール可能にして、Pull-to-Refreshを防ぐ */
[data-controller~="view-switcher"] turbo-frame#logs_list_mobile {
  display: block;
  height: calc(100dvh - var(--mobile-footer-h) - var(--mobile-headroom));
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  overscroll-behavior-y: contain; /* 上端での連鎖スクロールを遮断 */
}

/* 5) 念のため内部のリスト領域にも連鎖遮断 */
[data-controller~="view-switcher"] .mobile-content {
  overscroll-behavior-y: contain;
}

/* 6) 誤タップ軽減（フッターナビ） */
.mobile-footer a,
.mobile-footer button {
  -webkit-user-select: none;
  user-select: none;
  touch-action: pan-y;
}

/* スマホ表示でフッターメニューを一番上に置いた場合の補正 */
@media (max-width: 996px) {
  [data-controller~="view-switcher"] #mobile-view {
    padding-top: 40px; /* ← フッター分だけ下げる */
  }
}

.footer-top {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 5000;
}

