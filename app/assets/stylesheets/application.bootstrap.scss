// application.bootstrap.scss
// すべての @use はファイルの本当の先頭に！コメントはOK
@use "components/floating_button";
@use "components/neon_buttons" as *;
@use "custom_styles";
@use "index_logs";
@use "modal_styles";
@use "mobile_apps";
@use "application_index";
@use "new_html";
@use "playlist_music";
@use "show_html";
@use "profile_styles";
@use "nokori_styles";
@use "swal_flash_craft";
@use "music_player";

// 外部CSSのみはそのあと（CDN Bootswatch）

/* =========================================================
   ここから “スマホ表示が出ない” 対策を含むあなたのCSS（全部）
   ========================================================= */

.view-hidden {
  display: none !important;
  opacity: 0 !important;
  visibility: hidden !important;
  height: 0 !important;
  pointer-events: none !important;
}

// html.preload body { visibility: hidden; }

.mobile-only { display: none !important; }
.desktop-only { display: block !important; }

@media (max-width: 768px) {
  .desktop-only { display: none !important; }
  .mobile-only { display: block !important; }
}

body.modal-open #bottom-player { z-index: 20000 !important; }

// showページのプレーヤー高さ
body.playlist-show-page .bottom-player {
  position: fixed !important;
  bottom: 50px !important; /* デスクトップ時 */
  left: 0 !important;
  right: 0 !important;
  z-index: 2000 !important;
}

@media (max-width: 996px) {
  html body .bottom-player {
    position: fixed !important;  // ← static をねじ伏せる
    bottom: 80px !important;     // ← 上にずらしたい値
    left: 0 !important;
    right: 0 !important;
    z-index: 2000 !important;    // ← 必要なら
  }
}

/* ===== モバイル：プレイリスト“一覧”モーダル内は必ずタップ可 ===== */
#playlist-modal-mobile {
  #super-search-panel { pointer-events: auto !important; }
  #playlist-sidebar-home,
  .filter-box,
  a,
  button,
  .playlist-link {
    pointer-events: auto !important;
  }
}

/* モーダル中はフッターがタップを奪わないように（安全策） */
.modal-open .mobile-footer { pointer-events: none; }

/* ローディングカバーを隠している時はタップを邪魔しない（保険） */
#loading-overlay.view-hidden { pointer-events: none !important; }

/* === プレーヤー非表示フラグ用（問い合わせ・プロフィール編集など） === */
.no-player #bottom-player { display: none !important; }
.no-player #hidden-sc-player { display: none !important; }

/* フッタープレーヤーの高さぶんだけ下に余白を常に確保 */
:root { --footer-player-h: 84px; } /* 実高さに合わせて 76〜96px で調整可 */

.emotion-log-show {
  padding-bottom: calc(var(--footer-player-h) + env(safe-area-inset-bottom, 0px));
}

/* もし body に no-player が付くケースがあれば余白ゼロに戻す（保険） */
body.no-player .emotion-log-show { padding-bottom: 0 !important; }

/* ===== モバイル詳細ページ：ページネーションの固定化を禁止 & 中央寄せ ===== */
.emotion-log-show .pagination {
  position: static !important;   /* fixed/sticky を無効化 */
  inset: auto !important;        /* top/right/bottom/left を無効化 */
  float: none !important;        /* ← タイポ修正（!重要 → !important） */
  display: flex;
  flex-wrap: wrap !important;
  justify-content: center !important;
  white-space: normal !important;
  gap: .25rem;
}

/* =========================================================
   JSが落ちてもモバイルを必ず表示させる緊急フォールバック
   - 768px以下は #mobile-view を強制表示
   - .view-hidden の抑え込みも含む（opacity/visibility等も反転）
   - preloadの黒画面も可視化に修正
   ========================================================= */

#desktop-view { display: block; }
#mobile-view  { display: none; }

@media (max-width: 768px) {
  /* ▼ 通常の切替（モバイル幅では必ずモバイルを出す） */
  #desktop-view { display: none !important; }
  #mobile-view  { display: block !important; }

  /* ▼ view-switcher 等が .view-hidden を付けても表示が消えないように上書き */
  #mobile-view.view-hidden {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    height: auto !important;
    pointer-events: auto !important;
  }
  #desktop-view.view-hidden { display: none !important; }

  /* ▼ 補助クラスにも保険（既存の .mobile-only / .desktop-only と整合） */
  .desktop-only { display: none !important; }
  .mobile-only  { display: block !important; }
}

/* ▼ preloadで真っ黒のまま止まらないように可視化へ反転 */
html.preload body { visibility: visible !important; }

/* =========================================================
   モバイル時：#mobile-view配下やモバイル系の中身も必ず見えるようにする
   - .view-hidden を強制解除
   - よく残留する全画面カバー(#loading-overlay / .modal-backdrop)も無効化
   - #mobile-view ラッパが無い構成でも .mobile-container/.mobile-index を救済
   ========================================================= */
@media (max-width: 768px) {
  /* 中身の .view-hidden を解除（display/opacity/visibility/height/pointer） */
  #mobile-view .view-hidden,
  .mobile-container .view-hidden,
  .mobile-index .view-hidden {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    height: auto !important;
    pointer-events: auto !important;
  }

  /* モバイル系の主要コンテナ自体を必ず表示（ラッパが無い場合の保険） */
  .mobile-container,
  .mobile-index,
  .emotion-log-show {
    display: block !important;
    min-height: 60vh !important;
  }

  /* 残留しやすいカバー要素を一時的に無効化（緊急回避） */
  #loading-overlay,
  .modal-backdrop {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
    pointer-events: none !important;
  }
}

/* =========================================================
   🔥最優先ワンショット：iPhoneで必ず中身を表示する
   - モバイル幅では .view-hidden を「全域で」無効化
   - デスクトップビューは強制非表示、モバイルは強制表示
   - かぶりやすいオーバーレイは無効化
   ========================================================= */
@media (max-width: 768px) {
  /* 1) どの要素に付いていても .view-hidden を無効化（親ごと殺しているケースを救う） */
  .view-hidden {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    height: auto !important;
    pointer-events: auto !important;
  }

  /* 2) ビューの強制切替（JSが死んでいても確実に出す） */
  #desktop-view { display: none !important; }
  #mobile-view  { display: block !important; }

  /* 3) 画面を覆う残骸は無効化（真っ黒/タップ不可を防ぐ） */
  #loading-overlay,
  #screen-cover-loading,
  .modal-backdrop,
  .offcanvas-backdrop {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
    pointer-events: none !important;
  }
}

/* =========================================================
   強制表示・最終手段（スマホ幅）
   - Turbo Frame や hidden 属性も可視化
   ========================================================= */
@media (max-width: 768px) {
  /* すべての hidden を可視化（緊急用） */
  [hidden] {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    height: auto !important;
    pointer-events: auto !important;
  }

  /* Turbo Frame を必ず表示 */
  turbo-frame#logs_list_mobile,
  #logs_list_mobile {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    height: auto !important;
    contain: none !important;
  }

  /* 念のため、親の切替も固定 */
  #desktop-view { display: none !important; }
  #mobile-view  { display: block !important; }
}

/* =========================================================
   ここから “もう一つのカスタム” 全部
   ========================================================= */

.user-dropdown:hover .dropdown-menu { display: block; }

/* （BS3想定の）ページネーション */
.pagination>li>a {
  border: none;
  color: #696969;
}
.pagination>.active>a {
  background: #93c9ff;
  border-radius: 15px;
}
.pagination>li>a:hover {
  border-radius: 15px;
}

/* （BS5想定の）ページネーションも一緒に効かせておくと安全 */
.pagination .page-link {
  border: none;
  color: #696969;
}
.pagination .page-item.active .page-link {
  background: #93c9ff;
  border-color: #93c9ff;
  color: #fff;
  border-radius: 15px;
}
.pagination .page-link:hover { border-radius: 15px; }

// アバター画像
.rounded-circle {
  border-radius: 50%;
  border: 2px solid #e600ff;
  box-shadow: 0 0 8px rgba(230, 0, 255, 0.6);
}
#cropContainer {
  position: relative;
  width: 80px;   /* トリミング枠のサイズ */
  height: 80px;
  overflow: hidden;
  border: 2px solid #ccc; /* 任意で見えるように */
}
#cropImage {
  position: absolute;
  top: 0;
  left: 0;
  user-select: none;
  -webkit-user-select: none;
  max-width: none;
  max-height: none;
  cursor: grab;
}
#avatarPreviewInline {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  object-fit: cover;
}

// スーパーサーチ (mobile)
.mobile-super-search-modal-content {
  background: #141824;
  color: #fff;
  border-radius: 18px;
  box-shadow: 0 4px 20px #0006;
}
.mobile-form-label {
  font-size: 1.06em;
  font-weight: 600;
  margin-bottom: 0.5em;
  color: #c6f6fa;
}
.mobile-form-select,
.mobile-form-control {
  border-radius: 8px;
  background: #202d36;
  color: #fff;
  border: 1px solid #364b6b;
  padding: 0.55em 0.9em;
  font-size: 1em;
}
.mobile-form-autocomplete { position: relative; }
.mobile-tag-suggestions {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  z-index: 9999;
  margin: 0;
  border-radius: 0 0 12px 12px;
  background: #232b3a;
  border: 1px solid #2b3d4d;
  box-shadow: 0 2px 16px #0014;
  max-height: 180px;
  overflow-y: auto;
}
.mobile-super-search-btn:hover {
  transform: scale(1.04);
  box-shadow: 0 0 24px #ae5cff80;
}
.mobile-reset-btn { min-width: 92px; }
@media (max-width: 520px) {
  .mobile-super-search-modal-content {
    border-radius: 0;
    box-shadow: none;
  }
}
